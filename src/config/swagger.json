{
   "swagger": "2.0",
   "host": "localhost:3001",
   "basePath": "/api/v1",
   "info": {
      "version": "1.0.0",
      "title": "Invoices Builder API Backend",
      "description": "An API that uses creates and maintains Invoices for a frontend client",
      "contact": {
         "name": "Drewery INC",
         "email": "drewery@gmail..com",
         "url": "https://drewery.com"
      },
      "license": {
         "name": "MIT",
         "url": "https://opensource.org/licenses/MIT"
      }
   },
   "tags": [
      {
         "name": "Invoices",
         "description": "Operations about invoices"
      }
   ],
   "schemes": [ "http" ],
   "consumes": [ "application/json" ],
   "produces": [ "application/json" ],
   "paths": {
      "/invoices": {
         "get": {
            "tags": [ "Invoices" ],
            "summary": "Retrieve all invoices from database",
            "description": "Returns all invoices from the database that the user has access to",
            "operationId": "findAllInvoices",
            "produces": [ "application/json" ],
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "description": "number of page to return",
                  "required": false,
                  "type": "integer",
                  "format": "int32"
               },
               {
                  "name": "perPage",
                  "in": "query",
                  "description": "number of records per page",
                  "required": false,
                  "type": "integer",
                  "format": "int32"
               }
            ],
            "responses": {
               "200": {
                  "description": "Invoices response",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/Invoices"
                     }
                  }
               },
               "default": {
                  "description": "unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "post": {
            "tags": [ "Invoices" ],
            "summary": "Create a new invoice",
            "description": "Creates a new Invoice. Duplicates aren't allowed",
            "operationId": "createInvoice",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "Invoice",
                  "in": "body",
                  "description": "New Invoice Record",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Invoice"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Invoice response",
                  "schema": {
                     "$ref": "#/definitions/Invoice"
                  }
               },
               "default": {
                  "description": "unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/invoices/{id}": {
         "get": {
            "tags": [ "Invoices" ],
            "summary": "Retrieve a single invoice by ID",
            "description": "Returns a single Invoice based on it's ID",
            "operationId": "findInvoiceById",
            "produces": [
               "application/json",
               "application/xml",
               "text/xml",
               "text/html"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of invoice to fetch",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Invoice response",
                  "schema": {
                     "$ref": "#/definitions/Invoice"
                  }
               },
               "default": {
                  "description": "unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "put": {
            "tags": [ "Invoices" ],
            "summary": "Update an existing invoice",
            "description": "Updates an existing Invoice",
            "operationId": "updateInvoice",
            "produces": [ "application/json" ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of invoice to update",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "Invoice",
                  "in": "body",
                  "description": "Invoice Record",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/UpdateInvoice"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Invoice response",
                  "schema": {
                     "$ref": "#/definitions/Invoice"
                  }
               },
               "default": {
                  "description": "unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "delete": {
            "tags": [ "Invoices" ],
            "summary": "Delete an invoice",
            "description": "Deletes a single Invoice based on the ID supplied",
            "operationId": "DeleteInvoice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of invoice to delete",
                  "required": true,
                  "type": "integer",
                  "format": "int64"
               }
            ],
            "responses": {
               "204": {
                  "description": "invoice deleted"
               },
               "default": {
                  "description": "unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      }
   },
   "definitions": {
      "Invoice": {
         "required": [ "item", "quantity", "amount", "tax", "date", "dueDate" ],
         "properties": {
            "_id": { "type": "string", "uniqueItems": true },
            "item": { "type": "string" },
            "quantity": { "type": "integer", "format": "int32" },
            "amount": { "type": "number", "format": "double" },
            "tax": { "type": "number", "format": "double" },
            "date": { "type": "string", "format": "date" },
            "dueDate": { "type": "string", "format": "date" }
         }
      },
      "Invoices": {
         "properties": {
            "docs": {
               "type": "array",
               "$ref": "#/definitions/Invoice"
            },
            "total": {
               "type": "integer"
            },
            "page": {
               "type": "integer"
            },
            "pages ": {
               "type": "integer"
            },
            "limit": {
               "type": "integer"
            }
         }
      },
      "UpdateInvoice": {
         "properties": {
            "item": { "type": "string" },
            "quantity": { "type": "integer", "format": "int32" },
            "amount": { "type": "number", "format": "double" },
            "tax": { "type": "number", "format": "double" },
            "date": { "type": "string", "format": "date" },
            "dueDate": { "type": "string", "format": "date" }
         }
      },
      "ErrorModel": {
         "type": "object",
         "required": [
            "code",
            "message"
         ],
         "properties": {
            "code": {
               "type": "integer",
               "format": "int32"
            },
            "message": {
               "type": "string"
            }
         }
      }
   }
}